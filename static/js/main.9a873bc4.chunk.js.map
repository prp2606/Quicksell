{"version":3,"sources":["Function Calls/backend.js","Components/counter.js","routes.js","index.js"],"names":["require","config","Counter","useState","counter","loading","error","info","setInfo","useEffect","fetch","process","method","then","response","console","log","catch","data","err","helpPutCounter","temp","headers","Accept","body","JSON","stringify","putCounter","Pratik","parseInt","className","style","display","id","onClick","value","type","autoFocus","onChange","event","target","Routes","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAAA,EAAQ,IAAUC,S,MCMlBD,EAAQ,IAAUC,SAClB,IAiIeC,EA/HC,WACd,MAAwBC,mBAAS,CAC/BC,QAAS,EACTC,SAAS,EACTC,MAAO,KAHT,mBAAOC,EAAP,KAAaC,EAAb,KAMQJ,EAA4BG,EAA5BH,QAASC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAE1BG,qBAAU,WDbHC,MAAM,GAAD,OAJCC,+EAIa,CACxBC,OAAQ,QAEPC,MAAK,SAACC,GAEL,OADAC,QAAQC,IAAI,oBACLF,KAERG,OAAM,SAACX,GAAD,OAAWS,QAAQC,IAAI,YAAaV,MCQxCO,MAAK,SAACK,GACDA,EAAKZ,MACPE,EAAQ,2BAAKD,GAAN,IAAYD,MAAOY,EAAKZ,MAAOD,SAAS,KAE/CG,EAAQ,2BACHD,GADE,IAELD,MAAO,GACPD,SAAS,EACTD,QAASc,EAAKd,QAAUc,EAAKd,QAAU,QAI5Ca,OAAM,SAACE,GAAD,OAASJ,QAAQC,IAAI,YAAaG,QAC1C,IAEH,IAwBMC,EAAiB,SAACC,ID5CA,SAACjB,GACzB,OAAOM,MAAM,GAAD,OAdCC,sEAca,CACxBC,OAAQ,MACRU,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtB,KAEpBS,MAAK,SAACC,GACL,OAAOA,KAERG,OAAM,SAACX,GAAD,OAAWS,QAAQC,IAAI,YAAaV,OCqC3CqB,CAJW,CACTC,OAAQC,SAASzB,GAAWiB,IAI3BR,MAAK,SAACK,GACDA,EAAKZ,MACPE,EAAQ,2BACHD,GADE,IAELF,SAAS,EACTC,MAAOY,EAAKZ,SAGdE,EAAQ,2BACHD,GADE,IAELD,MAAO,GACPD,SAAS,EACTD,QAASyB,SAASzB,GAAWiB,QAIlCJ,OAAM,SAACE,GAAD,OAASJ,QAAQC,IAAI,YAAaG,OAqB7C,OACE,qBAAKW,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UA3DA,qBAAKA,UAAU,MAAMC,MAAO,CAAEC,QAAS1B,EAAQ,QAAU,QAAzD,SACE,4BAAIA,MATN,qBAAKwB,UAAU,MAAMC,MAAO,CAAEC,QAAS3B,EAAU,QAAU,QAA3D,SACE,0DAqEA,sBAAKyB,UAAU,UAAf,UAEE,qBAAKA,UAAU,MAAMG,GAAG,QAAQC,QAZtB,WAChB1B,EAAQ,2BAAKD,GAAN,IAAYD,MAAO,GAAID,SAAS,KACvCe,GAAgB,IAUV,SACE,oCAEF,qBAAKU,UAAU,MAAf,SACE,uBACEK,MAAO/B,EACP6B,GAAG,MACHG,KAAK,SACLC,UAAU,KACVC,SAAU,SAACC,GACT/B,EAAQ,2BAAKD,GAAN,IAAYH,QAASmC,EAAMC,OAAOL,cAO/C,qBAAKL,UAAU,MAAMG,GAAG,OAAOC,QA1CrB,WAChB1B,EAAQ,2BAAKD,GAAN,IAAYF,SAAS,KACxBD,EAAU,EA/ECO,MAgFbH,EAAQ,2BACHD,GADE,IAELF,SAAS,EACTC,MAAO,qCAGTc,EAAe,IAiCX,SACE,uCA1EN,qBAAKa,GAAG,QAAR,SACE,iDAAoB7B,aCvCbqC,EAVA,WACb,OACE,cAAC,IAAD,CAAeC,SAAU/B,aAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgC,KAAK,IAAIC,OAAK,EAACC,UAAW3C,SCJzC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a873bc4.chunk.js","sourcesContent":["require(\"dotenv\").config();\r\nconst GETAPI = process.env.REACT_APP_GETREQ;\r\nconst PUTAPI = process.env.REACT_APP_PUTREQ;\r\n\r\nexport const getCounter = () => {\r\n  return fetch(`${GETAPI}`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      console.log(\"Counter obtained\");\r\n      return response;\r\n    })\r\n    .catch((error) => console.log(\"Get error\", error));\r\n};\r\n\r\nexport const putCounter = (counter) => {\r\n  return fetch(`${PUTAPI}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(counter),\r\n  })\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((error) => console.log(\"Put error\", error));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getCounter, putCounter } from \"../Function Calls/backend\";\r\nimport Symbol from \"./symbol\";\r\n\r\nimport \"./counter.css\";\r\n\r\nrequire(\"dotenv\").config();\r\nconst maxCounter = process.env.REACT_APP_MAX_VALUE || 1000;\r\n\r\nconst Counter = () => {\r\n  const [info, setInfo] = useState({\r\n    counter: 1,\r\n    loading: false,\r\n    error: \"\",\r\n  });\r\n\r\n  const { counter, loading, error } = info;\r\n\r\n  useEffect(() => {\r\n    getCounter()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setInfo({ ...info, error: data.error, loading: false });\r\n        } else {\r\n          setInfo({\r\n            ...info,\r\n            error: \"\",\r\n            loading: false,\r\n            counter: data.counter ? data.counter : 1,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"Get Error\", err));\r\n  }, []);\r\n\r\n  const loadingMessage = () => {\r\n    return (\r\n      <div className=\"msg\" style={{ display: loading ? \"block\" : \"none\" }}>\r\n        <p>Saving counter value...</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"msg\" style={{ display: error ? \"block\" : \"none\" }}>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const counterValue = () => {\r\n    return (\r\n      <div id=\"cInfo\">\r\n        <p>Counter Value : {counter}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const helpPutCounter = (temp) => {\r\n    let body = {\r\n      Pratik: parseInt(counter) + temp,\r\n    };\r\n\r\n    putCounter(body)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setInfo({\r\n            ...info,\r\n            loading: false,\r\n            error: data.error,\r\n          });\r\n        } else {\r\n          setInfo({\r\n            ...info,\r\n            error: \"\",\r\n            loading: false,\r\n            counter: parseInt(counter) + temp,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"Get Error\", err));\r\n  };\r\n\r\n  const increment = () => {\r\n    setInfo({ ...info, loading: true });\r\n    if (counter + 1 > maxCounter) {\r\n      setInfo({\r\n        ...info,\r\n        loading: false,\r\n        error: \"Counters maximum value reached!\",\r\n      });\r\n    } else {\r\n      helpPutCounter(1);\r\n    }\r\n  };\r\n\r\n  const decrement = () => {\r\n    setInfo({ ...info, error: \"\", loading: true });\r\n    helpPutCounter(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fullPage\">\r\n      <div className=\"main\">\r\n        {errorMessage()}\r\n        {loadingMessage()}\r\n        <div className=\"counter\">\r\n          {/* <Symbol symbol={\"+\"} id=\"plus\" /> */}\r\n          <div className=\"btn\" id=\"minus\" onClick={decrement}>\r\n            <p>-</p>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <input\r\n              value={counter}\r\n              id=\"ipt\"\r\n              type=\"number\"\r\n              autoFocus=\"on\"\r\n              onChange={(event) => {\r\n                setInfo({ ...info, counter: event.target.value });\r\n              }}\r\n              //   onBlur={helpPutCounter(0)}\r\n            />\r\n          </div>\r\n          {/* <Symbol symbol={\"-\"} id=\"plus\" /> */}\r\n\r\n          <div className=\"btn\" id=\"plus\" onClick={increment}>\r\n            <p>+</p>\r\n          </div>\r\n        </div>\r\n        {counterValue()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Counter from \"./Components/counter\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Counter} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Routes from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}